name: CI-Lint-And-Test

on:
  workflow_call:
  pull_request:
    types: [opened, synchronize, reopened]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  BLITZAR_BACKEND: cpu

jobs:
  # Run cargo check (with various feature permutations)
  check:
    name: Check Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-check-${{ hashFiles('**/Cargo.toml') }}
      - name: Install stable toolchain
        run: curl https://sh.rustup.rs -sSf | bash -s -- -y --profile minimal && source ~/.cargo/env && rustup toolchain install
      - name: Install Dependencies
        run: export DEBIAN_FRONTEND=non-interactive && sudo apt-get update && sudo apt-get install -y clang lld protobuf-compiler
      - name: Run cargo check (default features)
        run: cargo check --all-targets
      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown
      - name: Run cargo check (wasm feature)
        run: cargo check --target wasm32-unknown-unknown --no-default-features --features wasm

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.toml') }}
      - name: Install stable toolchain
        run: |
          curl https://sh.rustup.rs -sSf | bash -s -- -y --profile minimal && source ~/.cargo/env && rustup toolchain install
          rustup component add clippy
      - name: Install Dependencies
        run: export DEBIAN_FRONTEND=non-interactive && sudo apt-get update && sudo apt-get install -y clang lld protobuf-compiler
      - name: Run clippy (default features)
        run: cargo clippy --all-targets -- -D warnings
      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown
      - name: Run clippy (wasm feature)
        run: cargo clippy --target wasm32-unknown-unknown --no-default-features --features wasm -- -D warnings

  # Run cargo f --check
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        run: |
          curl https://sh.rustup.rs -sSf | bash -s -- -y --profile minimal && source ~/.cargo/env && rustup toolchain install
          rustup component add rustfmt
      - name: Run cargo fmt
        run: cargo f --check

  udeps:
    name: Unused Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install nightly toolchain
        run: |
          curl https://sh.rustup.rs -sSf | bash -s -- -y --profile minimal && source ~/.cargo/env && rustup toolchain install nightly
          cargo +nightly install cargo-udeps --locked
      - name: Install Dependencies
        run: export DEBIAN_FRONTEND=non-interactive && sudo apt-get update && sudo apt-get install -y clang lld protobuf-compiler
      - name: Run cargo udeps
        run: cargo +nightly udeps --all-targets
