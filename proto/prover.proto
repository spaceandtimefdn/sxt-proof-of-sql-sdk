syntax = "proto3";

package sxt.core;

import "ingest.proto";
import "google/protobuf/empty.proto";

// Interface exported by the server
service Prover {
    rpc queryWithProof(ProverQuery) returns (ProverResponse) {}
    rpc ingest(TableIngest) returns (google.protobuf.Empty) {}
}

// First value of enum is default value, so if no commitment
// scheme is specified in ProverQuery, IPA is chosen by default
enum CommitmentScheme {
    IPA = 0;
    DORY = 1;
}

message ProverContextRange {
    uint64 start = 1;
    repeated uint64 ends = 2;
}

message ChosenContextRange {
    uint64 start = 1;
    uint64 end = 2;
}

message ProverQuery {
    bytes proof_plan = 1;
    map<string, ProverContextRange> query_context = 3;
    CommitmentScheme commitment_scheme = 4;
}

message ProverResponse {
    bytes verifiable_result = 1;
    map<string, ChosenContextRange> chosen_context = 2;
}
